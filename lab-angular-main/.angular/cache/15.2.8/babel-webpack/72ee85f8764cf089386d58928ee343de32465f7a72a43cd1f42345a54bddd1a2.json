{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductDetailComponent = class ProductDetailComponent {\n  constructor(route, dataService, authService) {\n    this.route = route;\n    this.dataService = dataService;\n    this.authService = authService;\n    this.product = null;\n    this.errorMessage = null;\n    this.newRating = 0;\n    this.newReview = '';\n    this.userId = 0;\n  }\n  ngOnInit() {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.userId = this.getCurrentUserId();\n    this.dataService.getProductById(id).subscribe({\n      next: product => {\n        this.product = {\n          ...product,\n          availabilityStatus: this.getAvailabilityStatus(product.quantity) || 'Out of Stock'\n        };\n      },\n      error: err => this.errorMessage = err.message\n    });\n  }\n  getCurrentUserId() {\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n    return user.id || 0;\n  }\n  getAvailabilityStatus(quantity) {\n    if (quantity > 10) return 'In Stock';\n    if (quantity > 0) return 'Low Stock';\n    return 'Out of Stock';\n  }\n  submitRating() {\n    if (this.newRating >= 1 && this.newRating <= 5 && this.newReview && this.product) {\n      const ratingObj = {\n        rating: this.newRating,\n        review: this.newReview,\n        userId: this.userId\n      };\n      this.product.ratings = this.product.ratings || [];\n      this.product.ratings.push(ratingObj);\n      this.dataService.updateProduct(this.product).subscribe({\n        next: () => {\n          this.newRating = 0;\n          this.newReview = '';\n          alert('Rating and review submitted successfully!');\n        },\n        error: err => this.errorMessage = err.message\n      });\n    } else {\n      this.errorMessage = 'Please select a rating (1-5) and provide a review.';\n    }\n  }\n  getAverageRating() {\n    if (!this.product?.ratings?.length) return 0;\n    return this.product.ratings.reduce((sum, r) => sum + r.rating, 0) / this.product.ratings.length;\n  }\n  getAvailabilityClass() {\n    return this.product?.availabilityStatus?.toLowerCase().replace(' ', '-') || 'out-of-stock';\n  }\n};\nProductDetailComponent = __decorate([Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})], ProductDetailComponent);\nexport { ProductDetailComponent };","map":{"version":3,"mappings":"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","names":["Component","ProductDetailComponent","constructor","route","dataService","authService","ngOnInit","id","snapshot","paramMap","get","userId","getCurrentUserId","getProductById","subscribe","next","product","availabilityStatus","getAvailabilityStatus","quantity","error","err","errorMessage","message","user","JSON","parse","localStorage","getItem","submitRating","newRating","newReview","ratingObj","rating","review","ratings","push","updateProduct","alert","getAverageRating","length","reduce","sum","r","getAvailabilityClass","toLowerCase","replace","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\malik\\Downloads\\Evaluation\\lab-angular-main\\src\\app\\features\\inventory\\product-detail\\product-detail.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService } from 'src/app/core/data.service';\nimport { Product } from 'src/app/shared/models/product.mode';\nimport { AuthService } from 'src/app/core/auth.service';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n  product: Product | null = null;\n  errorMessage: string | null = null;\n  newRating: number = 0;\n  newReview: string = '';\n  userId: number = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    const id = +this.route.snapshot.paramMap.get('id')!;\n    this.userId = this.getCurrentUserId();\n    this.dataService.getProductById(id).subscribe({\n      next: (product: Product) => {\n        this.product = {\n          ...product,\n          availabilityStatus: this.getAvailabilityStatus(product.quantity) || 'Out of Stock'\n        };\n      },\n      error: (err: Error) => this.errorMessage = err.message\n    });\n  }\n\n  getCurrentUserId(): number {\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n    return user.id || 0;\n  }\n\n  getAvailabilityStatus(quantity: number): string {\n    if (quantity > 10) return 'In Stock';\n    if (quantity > 0) return 'Low Stock';\n    return 'Out of Stock';\n  }\n\n  submitRating(): void {\n    if (this.newRating >= 1 && this.newRating <= 5 && this.newReview && this.product) {\n      const ratingObj = { rating: this.newRating, review: this.newReview, userId: this.userId };\n      this.product.ratings = this.product.ratings || [];\n      this.product.ratings.push(ratingObj);\n      this.dataService.updateProduct(this.product).subscribe({\n        next: () => {\n          this.newRating = 0;\n          this.newReview = '';\n          alert('Rating and review submitted successfully!');\n        },\n        error: (err: Error) => this.errorMessage = err.message\n      });\n    } else {\n      this.errorMessage = 'Please select a rating (1-5) and provide a review.';\n    }\n  }\n\n  getAverageRating(): number {\n    if (!this.product?.ratings?.length) return 0;\n    return this.product.ratings.reduce((sum, r) => sum + r.rating, 0) / this.product.ratings.length;\n  }\n\n  getAvailabilityClass(): string {\n    return this.product?.availabilityStatus?.toLowerCase().replace(' ', '-') || 'out-of-stock';\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}