{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/core/auth.service\";\nimport * as i3 from \"@angular/router\";\nexport class SignInComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.errorMessage = null;\n    this.signInForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onSignIn() {\n    if (this.signInForm.valid) {\n      const {\n        email,\n        password\n      } = this.signInForm.value;\n      this.authService.login(email, password).subscribe({\n        next: response => {\n          this.errorMessage = null;\n          alert('User authenticated successfully');\n          this.router.navigate(['/inventory']);\n        },\n        error: err => {\n          this.errorMessage = err.message;\n        }\n      });\n    } else {\n      this.errorMessage = 'Please fill all fields correctly.';\n    }\n  }\n}\nSignInComponent.ɵfac = function SignInComponent_Factory(t) {\n  return new (t || SignInComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\nSignInComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignInComponent,\n  selectors: [[\"app-sign-in\"]],\n  decls: 0,\n  vars: 0,\n  template: function SignInComponent_Template(rf, ctx) {},\n  styles: [\".card-container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    height: 100vh;\\r\\n  }\\r\\n  .card[_ngcontent-%COMP%] {\\r\\n    background-color: #f9f9f9;\\r\\n    padding: 20px;\\r\\n    border: 1px solid #ddd;\\r\\n    width: 300px;\\r\\n    box-shadow: 0 2px 5px rgba(0,0,0,0.1);\\r\\n  }\\r\\n  .form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 15px;\\r\\n  }\\r\\n  .form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\r\\n    display: inline-block;\\r\\n    width: 100px; \\r\\n    margin-right: 10px; \\r\\n  .form-group input {\\r\\n    width: 160px; \\r\\n    padding: 5px;\\r\\n  }\\r\\n  .error-text {\\r\\n    color: red;\\r\\n    font-size: 12px;\\r\\n    margin-left: 110px; \\r\\n  }\\r\\n  button {\\r\\n    padding: 5px 10px;\\r\\n  }}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvYXV0aC9zaWduLWluL3NpZ24taW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGFBQWE7RUFDZjtFQUNBO0lBQ0UseUJBQXlCO0lBQ3pCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLHFDQUFxQztFQUN2QztFQUNBO0lBQ0UsbUJBQW1CO0VBQ3JCO0VBQ0E7SUFDRSxxQkFBcUI7SUFDckIsWUFBWTtJQUNaLGtCQUFrQjtFQUNwQjtJQUNFLFlBQVk7SUFDWixZQUFZO0VBQ2Q7RUFDQTtJQUNFLFVBQVU7SUFDVixlQUFlO0lBQ2Ysa0JBQWtCO0VBQ3BCO0VBQ0E7SUFDRSxpQkFBaUI7RUFDbkIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICB9XHJcbiAgLmNhcmQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAycHggNXB4IHJnYmEoMCwwLDAsMC4xKTtcclxuICB9XHJcbiAgLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICB9XHJcbiAgLmZvcm0tZ3JvdXAgbGFiZWwge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMHB4OyBcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDsgXHJcbiAgLmZvcm0tZ3JvdXAgaW5wdXQge1xyXG4gICAgd2lkdGg6IDE2MHB4OyBcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICB9XHJcbiAgLmVycm9yLXRleHQge1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMTBweDsgXHJcbiAgfVxyXG4gIGJ1dHRvbiB7XHJcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcclxuICB9fSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAGA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAOnE,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,EAAe,EAAUC,WAAwB,EAAUC,MAAc;IAAzE,OAAE,GAAFF,EAAE;IAAuB,gBAAW,GAAXC,WAAW;IAAuB,WAAM,GAANC,MAAM;IAFrF,iBAAY,GAAkB,IAAI;IAGhC,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC9BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,IAAI,CAACL,UAAU,CAACM,KAAK,EAAE;MACzB,MAAM;QAAEJ,KAAK;QAAEE;MAAQ,CAAE,GAAG,IAAI,CAACJ,UAAU,CAACO,KAAK;MACjD,IAAI,CAACT,WAAW,CAACU,KAAK,CAACN,KAAK,EAAEE,QAAQ,CAAC,CAACK,SAAS,CAAC;QAChDC,IAAI,EAAGC,QAAQ,IAAI;UACjB,IAAI,CAACC,YAAY,GAAG,IAAI;UACxBC,KAAK,CAAC,iCAAiC,CAAC;UACxC,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;QACtC,CAAC;QACDC,KAAK,EAAGC,GAAG,IAAI;UACb,IAAI,CAACJ,YAAY,GAAGI,GAAG,CAACC,OAAO;QACjC;OACD,CAAC;KACH,MAAM;MACL,IAAI,CAACL,YAAY,GAAG,mCAAmC;;EAE3D;;AA3BWjB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["Validators","SignInComponent","constructor","fb","authService","router","signInForm","group","email","required","password","onSignIn","valid","value","login","subscribe","next","response","errorMessage","alert","navigate","error","err","message","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Users\\malik\\Downloads\\Evaluation\\lab-angular-main\\src\\app\\features\\auth\\sign-in\\sign-in.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/auth.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent {\n  signInForm: FormGroup;\n  errorMessage: string | null = null;\n\n  constructor(private fb: FormBuilder, private authService: AuthService, private router: Router) {\n    this.signInForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSignIn(): void {\n    if (this.signInForm.valid) {\n      const { email, password } = this.signInForm.value;\n      this.authService.login(email, password).subscribe({\n        next: (response) => {\n          this.errorMessage = null;\n          alert('User authenticated successfully');\n          this.router.navigate(['/inventory']);\n        },\n        error: (err) => {\n          this.errorMessage = err.message;\n        }\n      });\n    } else {\n      this.errorMessage = 'Please fill all fields correctly.';\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}