{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/core/data.service\";\nimport * as i4 from \"@angular/common\";\nfunction UpdateProductComponent_div_7_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Product name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_7_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Name must be at least 3 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, UpdateProductComponent_div_7_small_1_Template, 2, 0, \"small\", 2);\n    i0.ɵɵtemplate(2, UpdateProductComponent_div_7_small_2_Template, 2, 0, \"small\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.updateProductForm.get(\"name\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.updateProductForm.get(\"name\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction UpdateProductComponent_div_12_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Description is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, UpdateProductComponent_div_12_small_1_Template, 2, 0, \"small\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.updateProductForm.get(\"description\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction UpdateProductComponent_div_17_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Manufacturer is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, UpdateProductComponent_div_17_small_1_Template, 2, 0, \"small\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.updateProductForm.get(\"manufacturer\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction UpdateProductComponent_div_22_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Price is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_22_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Price cannot be negative.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, UpdateProductComponent_div_22_small_1_Template, 2, 0, \"small\", 2);\n    i0.ɵɵtemplate(2, UpdateProductComponent_div_22_small_2_Template, 2, 0, \"small\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.updateProductForm.get(\"price\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r3.updateProductForm.get(\"price\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"min\"]);\n  }\n}\nfunction UpdateProductComponent_div_27_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Quantity is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_27_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Quantity must be at least 1.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, UpdateProductComponent_div_27_small_1_Template, 2, 0, \"small\", 2);\n    i0.ɵɵtemplate(2, UpdateProductComponent_div_27_small_2_Template, 2, 0, \"small\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r4.updateProductForm.get(\"quantity\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r4.updateProductForm.get(\"quantity\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"min\"]);\n  }\n}\nexport class UpdateProductComponent {\n  constructor(fb, route, dataService, router) {\n    this.fb = fb;\n    this.route = route;\n    this.dataService = dataService;\n    this.router = router;\n    this.errorMessage = null;\n    this.categories = ['Electronics', 'Clothing', 'Books'];\n    this.productId = +this.route.snapshot.paramMap.get('id');\n    this.updateProductForm = this.fb.group({\n      id: [this.productId],\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      manufacturer: ['', Validators.required],\n      manufacturingDate: ['', Validators.required],\n      price: [0, [Validators.required, Validators.min(1), Validators.max(1000)]],\n      quantity: [0, [Validators.required, Validators.min(0)]],\n      category: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.dataService.getProductById(this.productId).subscribe({\n      next: product => {\n        this.updateProductForm.patchValue(product);\n      },\n      error: err => this.errorMessage = err.message\n    });\n  }\n  onSubmit() {\n    if (this.updateProductForm.valid) {\n      const product = this.updateProductForm.value;\n      this.dataService.updateProduct(product).subscribe({\n        next: () => {\n          alert('Product updated successfully');\n          this.router.navigate(['/inventory']);\n        },\n        error: err => this.errorMessage = err.message\n      });\n    } else {\n      this.errorMessage = 'Please fill all fields correctly.';\n    }\n  }\n}\nUpdateProductComponent.ɵfac = function UpdateProductComponent_Factory(t) {\n  return new (t || UpdateProductComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.DataService), i0.ɵɵdirectiveInject(i2.Router));\n};\nUpdateProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateProductComponent,\n  selectors: [[\"app-update-product\"]],\n  decls: 30,\n  vars: 7,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"description\"], [\"type\", \"text\", \"formControlName\", \"manufacturer\"], [\"type\", \"number\", \"formControlName\", \"price\"], [\"type\", \"number\", \"formControlName\", \"quantity\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function UpdateProductComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Update Product\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateProductComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onUpdate();\n      });\n      i0.ɵɵelementStart(3, \"div\")(4, \"label\");\n      i0.ɵɵtext(5, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 1);\n      i0.ɵɵtemplate(7, UpdateProductComponent_div_7_Template, 3, 2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\")(9, \"label\");\n      i0.ɵɵtext(10, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 3);\n      i0.ɵɵtemplate(12, UpdateProductComponent_div_12_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\")(14, \"label\");\n      i0.ɵɵtext(15, \"Manufacturer:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 4);\n      i0.ɵɵtemplate(17, UpdateProductComponent_div_17_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\")(19, \"label\");\n      i0.ɵɵtext(20, \"Price:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 5);\n      i0.ɵɵtemplate(22, UpdateProductComponent_div_22_Template, 3, 2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\")(24, \"label\");\n      i0.ɵɵtext(25, \"Quantity:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 6);\n      i0.ɵɵtemplate(27, UpdateProductComponent_div_27_Template, 3, 2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"button\", 7);\n      i0.ɵɵtext(29, \"Update Product\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.updateProductForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.updateProductForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.updateProductForm.get(\"name\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.updateProductForm.get(\"description\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.updateProductForm.get(\"description\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.updateProductForm.get(\"manufacturer\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.updateProductForm.get(\"manufacturer\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.updateProductForm.get(\"price\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.updateProductForm.get(\"price\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.updateProductForm.get(\"quantity\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.updateProductForm.get(\"quantity\")) == null ? null : tmp_5_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.updateProductForm.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","UpdateProductComponent","constructor","fb","route","dataService","router","productId","snapshot","paramMap","get","updateProductForm","group","id","name","required","description","manufacturer","manufacturingDate","price","min","max","quantity","category","ngOnInit","getProductById","subscribe","next","product","patchValue","error","err","errorMessage","message","onSubmit","valid","value","updateProduct","alert","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\malik\\Downloads\\Evaluation\\lab-angular-main\\src\\app\\features\\inventory\\update-product\\update-product.component.ts","C:\\Users\\malik\\Downloads\\Evaluation\\lab-angular-main\\src\\app\\features\\inventory\\update-product\\update-product.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from 'src/app/core/data.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.css']\n})\nexport class UpdateProductComponent implements OnInit {\n  updateProductForm: FormGroup;\n  errorMessage: string | null = null;\n  categories: string[] = ['Electronics', 'Clothing', 'Books'];\n  productId: number;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private router: Router\n  ) {\n    this.productId = +this.route.snapshot.paramMap.get('id')!;\n    this.updateProductForm = this.fb.group({\n      id: [this.productId],\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      manufacturer: ['', Validators.required],\n      manufacturingDate: ['', Validators.required],\n      price: [0, [Validators.required, Validators.min(1), Validators.max(1000)]],\n      quantity: [0, [Validators.required, Validators.min(0)]],\n      category: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.dataService.getProductById(this.productId).subscribe({\n      next: (product) => {\n        this.updateProductForm.patchValue(product);\n      },\n      error: (err) => this.errorMessage = err.message\n    });\n  }\n\n  onSubmit(): void {\n    if (this.updateProductForm.valid) {\n      const product = this.updateProductForm.value;\n      this.dataService.updateProduct(product).subscribe({\n        next: () => {\n          alert('Product updated successfully');\n          this.router.navigate(['/inventory']);\n        },\n        error: (err) => this.errorMessage = err.message\n      });\n    } else {\n      this.errorMessage = 'Please fill all fields correctly.';\n    }\n  }\n}","<h2>Update Product</h2>\r\n<form [formGroup]=\"updateProductForm\" (ngSubmit)=\"onUpdate()\">\r\n    <div>\r\n        <label>Name:</label>\r\n        <input type=\"text\" formControlName=\"name\" />\r\n        <div *ngIf=\"updateProductForm.get('name')?.invalid && updateProductForm.get('name')?.touched\">\r\n            <small *ngIf=\"updateProductForm.get('name')?.errors?.['required']\">Product name is required.</small>\r\n            <small *ngIf=\"updateProductForm.get('name')?.errors?.['minlength']\">Name must be at least 3 characters\r\n                long.</small>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <label>Description:</label>\r\n        <input type=\"text\" formControlName=\"description\" />\r\n        <div *ngIf=\"updateProductForm.get('description')?.invalid && updateProductForm.get('description')?.touched\">\r\n            <small *ngIf=\"updateProductForm.get('description')?.errors?.['required']\">Description is required.</small>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <label>Manufacturer:</label>\r\n        <input type=\"text\" formControlName=\"manufacturer\" />\r\n        <div *ngIf=\"updateProductForm.get('manufacturer')?.invalid && updateProductForm.get('manufacturer')?.touched\">\r\n            <small *ngIf=\"updateProductForm.get('manufacturer')?.errors?.['required']\">Manufacturer is required.</small>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <label>Price:</label>\r\n        <input type=\"number\" formControlName=\"price\" />\r\n        <div *ngIf=\"updateProductForm.get('price')?.invalid && updateProductForm.get('price')?.touched\">\r\n            <small *ngIf=\"updateProductForm.get('price')?.errors?.['required']\">Price is required.</small>\r\n            <small *ngIf=\"updateProductForm.get('price')?.errors?.['min']\">Price cannot be negative.</small>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <label>Quantity:</label>\r\n        <input type=\"number\" formControlName=\"quantity\" />\r\n        <div *ngIf=\"updateProductForm.get('quantity')?.invalid && updateProductForm.get('quantity')?.touched\">\r\n            <small *ngIf=\"updateProductForm.get('quantity')?.errors?.['required']\">Quantity is required.</small>\r\n            <small *ngIf=\"updateProductForm.get('quantity')?.errors?.['min']\">Quantity must be at least 1.</small>\r\n        </div>\r\n    </div>\r\n    <button type=\"submit\" [disabled]=\"updateProductForm.invalid\">Update Product</button>\r\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}