{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductListComponent = class ProductListComponent {\n  constructor(dataService, authService, router) {\n    this.dataService = dataService;\n    this.authService = authService;\n    this.router = router;\n    this.searchTerm = '';\n    this.filteredProducts = [];\n    this.products = [];\n    this.categories = ['Electronics', 'Clothing', 'Books', 'SkinCare', 'Health', 'Sports', 'Stationary'];\n    this.selectedCategory = '';\n    this.stockAlerts = [];\n    this.lowStockThreshold = 5;\n    this.errorMessage = null;\n    this.userRole = '';\n  }\n  ngOnInit() {\n    this.loadProducts();\n    this.loadUserData();\n  }\n  loadProducts() {\n    this.dataService.getProducts().subscribe({\n      next: products => {\n        this.products = products.map(product => ({\n          ...product,\n          availabilityStatus: this.getAvailabilityStatus(product.quantity) || 'Out of Stock'\n        }));\n        this.applyFilters();\n      },\n      error: err => this.errorMessage = err.message\n    });\n  }\n  loadUserData() {\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n    this.userRole = user.role || 'user';\n  }\n  applyFilters() {\n    let tempProducts = [...this.products];\n    if (this.selectedCategory) {\n      tempProducts = tempProducts.filter(product => product.category === this.selectedCategory);\n    }\n    if (this.searchTerm) {\n      tempProducts = tempProducts.filter(product => product.name.toLowerCase().includes(this.searchTerm.toLowerCase()));\n    }\n    this.filteredProducts = tempProducts;\n    this.checkStockAlerts();\n  }\n  onSearch(event) {\n    this.searchTerm = event;\n    this.applyFilters();\n  }\n  onCategoryChange(category) {\n    this.selectedCategory = category;\n    this.applyFilters();\n  }\n  viewProduct(id) {\n    if (id !== undefined) {\n      this.router.navigate([`/inventory/product-detail/${id}`]);\n    } else {\n      this.errorMessage = 'Product ID is undefined';\n    }\n  }\n  editProduct(id) {\n    if (id !== undefined) {\n      if (this.userRole === 'user') {\n        alert('Only admin have the access');\n        return;\n      }\n      const pin = prompt('Enter admin pin (4 digits):');\n      if (pin && this.authService.verifyAdminPin(pin)) {\n        this.router.navigate([`/inventory/update-product/${id}`]);\n      } else {\n        alert('Invalid admin pin.');\n      }\n    } else {\n      this.errorMessage = 'Product ID is undefined';\n    }\n  }\n  deleteProduct(productId) {\n    if (productId !== undefined) {\n      if (this.userRole === 'user') {\n        alert('Only admin have the access');\n        return;\n      }\n      const pin = prompt('Enter admin pin (4 digits):');\n      if (pin && this.authService.verifyAdminPin(pin)) {\n        this.dataService.deleteProduct(productId).subscribe({\n          next: () => this.loadProducts(),\n          error: err => this.errorMessage = err.message\n        });\n      } else {\n        alert('Invalid admin pin.');\n      }\n    } else {\n      this.errorMessage = 'Product ID is undefined';\n    }\n  }\n  addProduct() {\n    if (this.userRole === 'user') {\n      alert('Only admin have the access');\n      return;\n    }\n    const pin = prompt('Enter admin pin (4 digits):');\n    if (pin && this.authService.verifyAdminPin(pin)) {\n      this.router.navigate(['/inventory/add-product']);\n    } else {\n      alert('Invalid admin pin.');\n    }\n  }\n  checkStockAlerts() {\n    this.stockAlerts = [];\n    this.products.forEach(product => {\n      if (product.quantity < this.lowStockThreshold) {\n        this.stockAlerts.push(`${product.name} is low in stock (${product.quantity} units remaining)`);\n      }\n    });\n    if (this.stockAlerts.length > 0) {\n      alert(this.stockAlerts.join('\\n'));\n    }\n  }\n  getAvailabilityStatus(quantity) {\n    if (quantity > 10) return 'In Stock';\n    if (quantity > 0) return 'Low Stock';\n    return 'Out of Stock';\n  }\n  getAvailabilityClass(status) {\n    return status ? status.toLowerCase().replace(' ', '-') : 'out-of-stock';\n  }\n};\nProductListComponent = __decorate([Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})], ProductListComponent);\nexport { ProductListComponent };","map":{"version":3,"mappings":"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","names":["Component","ProductListComponent","constructor","dataService","authService","router","ngOnInit","loadProducts","loadUserData","getProducts","subscribe","next","products","map","product","availabilityStatus","getAvailabilityStatus","quantity","applyFilters","error","err","errorMessage","message","user","JSON","parse","localStorage","getItem","userRole","role","tempProducts","selectedCategory","filter","category","searchTerm","name","toLowerCase","includes","filteredProducts","checkStockAlerts","onSearch","event","onCategoryChange","viewProduct","id","undefined","navigate","editProduct","alert","pin","prompt","verifyAdminPin","deleteProduct","productId","addProduct","stockAlerts","forEach","lowStockThreshold","push","length","join","getAvailabilityClass","status","replace","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\malik\\Downloads\\Angular Capstone Project\\lab-angular-main\\src\\app\\features\\inventory\\product-detail\\product-detail.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/auth.service';\nimport { DataService } from 'src/app/core/data.service';\nimport { Product } from 'src/app/shared/models/product.mode';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  searchTerm: string = '';\n  filteredProducts: Product[] = [];\n  products: Product[] = [];\n  categories: string[] = ['Electronics', 'Clothing', 'Books', 'SkinCare', 'Health', 'Sports', 'Stationary'];\n  selectedCategory: string = '';\n  stockAlerts: string[] = [];\n  lowStockThreshold: number = 5;\n  errorMessage: string | null = null;\n  userRole: string = '';\n\n  constructor(\n    private dataService: DataService,\n    private authService: AuthService,\n    public router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loadProducts();\n    this.loadUserData();\n  }\n\n  loadProducts(): void {\n    this.dataService.getProducts().subscribe({\n      next: (products: Product[]) => {\n        this.products = products.map(product => ({\n          ...product,\n          availabilityStatus: this.getAvailabilityStatus(product.quantity) || 'Out of Stock'\n        }));\n        this.applyFilters();\n      },\n      error: (err: Error) => this.errorMessage = err.message\n    });\n  }\n\n  loadUserData(): void {\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n    this.userRole = user.role || 'user';\n  }\n\n  applyFilters(): void {\n    let tempProducts: Product[] = [...this.products];\n    if (this.selectedCategory) {\n      tempProducts = tempProducts.filter(product => product.category === this.selectedCategory);\n    }\n    if (this.searchTerm) {\n      tempProducts = tempProducts.filter(product =>\n        product.name.toLowerCase().includes(this.searchTerm.toLowerCase())\n      );\n    }\n    this.filteredProducts = tempProducts;\n    this.checkStockAlerts();\n  }\n\n  onSearch(event: string): void {\n    this.searchTerm = event;\n    this.applyFilters();\n  }\n\n  onCategoryChange(category: string): void {\n    this.selectedCategory = category;\n    this.applyFilters();\n  }\n\n  viewProduct(id: number | undefined): void {\n    if (id !== undefined) {\n      this.router.navigate([`/inventory/product-detail/${id}`]);\n    } else {\n      this.errorMessage = 'Product ID is undefined';\n    }\n  }\n\n  editProduct(id: number | undefined): void {\n    if (id !== undefined) {\n      if (this.userRole === 'user') {\n        alert('Only admin have the access');\n        return;\n      }\n      const pin = prompt('Enter admin pin (4 digits):');\n      if (pin && this.authService.verifyAdminPin(pin)) {\n        this.router.navigate([`/inventory/update-product/${id}`]);\n      } else {\n        alert('Invalid admin pin.');\n      }\n    } else {\n      this.errorMessage = 'Product ID is undefined';\n    }\n  }\n\n  deleteProduct(productId: number | undefined): void {\n    if (productId !== undefined) {\n      if (this.userRole === 'user') {\n        alert('Only admin have the access');\n        return;\n      }\n      const pin = prompt('Enter admin pin (4 digits):');\n      if (pin && this.authService.verifyAdminPin(pin)) {\n        this.dataService.deleteProduct(productId).subscribe({\n          next: () => this.loadProducts(),\n          error: (err: Error) => this.errorMessage = err.message\n        });\n      } else {\n        alert('Invalid admin pin.');\n      }\n    } else {\n      this.errorMessage = 'Product ID is undefined';\n    }\n  }\n\n  addProduct(): void {\n    if (this.userRole === 'user') {\n      alert('Only admin have the access');\n      return;\n    }\n    const pin = prompt('Enter admin pin (4 digits):');\n    if (pin && this.authService.verifyAdminPin(pin)) {\n      this.router.navigate(['/inventory/add-product']);\n    } else {\n      alert('Invalid admin pin.');\n    }\n  }\n\n  checkStockAlerts(): void {\n    this.stockAlerts = [];\n    this.products.forEach(product => {\n      if (product.quantity < this.lowStockThreshold) {\n        this.stockAlerts.push(`${product.name} is low in stock (${product.quantity} units remaining)`);\n      }\n    });\n    if (this.stockAlerts.length > 0) {\n      alert(this.stockAlerts.join('\\n'));\n    }\n  }\n\n  getAvailabilityStatus(quantity: number): string {\n    if (quantity > 10) return 'In Stock';\n    if (quantity > 0) return 'Low Stock';\n    return 'Out of Stock';\n  }\n\n  getAvailabilityClass(status: string | undefined): string {\n    return status ? status.toLowerCase().replace(' ', '-') : 'out-of-stock';\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}