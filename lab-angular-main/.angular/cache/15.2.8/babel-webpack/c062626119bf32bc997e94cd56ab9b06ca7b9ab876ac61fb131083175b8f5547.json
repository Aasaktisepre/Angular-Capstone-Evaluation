{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000';\n  }\n  getUsers() {\n    return this.http.get(`${this.apiUrl}/users`);\n  }\n  getProductById(id) {\n    return this.http.get(`${this.apiUrl}/products/${id}`);\n  }\n  getProducts() {\n    return this.http.get(`${this.apiUrl}/products`);\n  }\n  addProduct(product) {\n    return this.http.post(`${this.apiUrl}/products`, product);\n  }\n  deleteProduct(id) {\n    return this.http.delete(`${this.apiUrl}/products/${id}`);\n  }\n  updateProduct(product) {\n    return this.http.put(`${this.apiUrl}/products/${product.id}`, product).pipe(catchError(error => throwError(() => new Error('Update failed: ' + error.message))));\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAAcC,UAAU,QAAQ,gBAAgB;;;AAMhD,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,uBAAuB;EAED;EAEvCC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,QAAQ,CAAC;EAC9C;EAEAC,cAAc,CAACC,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,MAAM,aAAaE,EAAE,EAAE,CAAC;EAChE;EAEAC,WAAW;IACT,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAAY,GAAG,IAAI,CAACC,MAAM,WAAW,CAAC;EAC5D;EAEAI,UAAU,CAACC,OAAgB;IACzB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAU,GAAG,IAAI,CAACN,MAAM,WAAW,EAAEK,OAAO,CAAC;EACpE;EAEAE,aAAa,CAACL,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACR,MAAM,aAAaE,EAAE,EAAE,CAAC;EAC1D;EAEAO,aAAa,CAACJ,OAAgB;IAC5B,OAAO,IAAI,CAACR,IAAI,CAACa,GAAG,CAAU,GAAG,IAAI,CAACV,MAAM,aAAaK,OAAO,CAACH,EAAE,EAAE,EAAEG,OAAO,CAAC,CAACM,IAAI,CAClFjB,UAAU,CAACkB,KAAK,IAAInB,UAAU,CAAC,MAAM,IAAIoB,KAAK,CAAC,iBAAiB,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CACpF;EACH;;AA7BWnB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["throwError","catchError","DataService","constructor","http","getUsers","get","apiUrl","getProductById","id","getProducts","addProduct","product","post","deleteProduct","delete","updateProduct","put","pipe","error","Error","message","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\malik\\Downloads\\Evaluation\\lab-angular-main\\src\\app\\core\\data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Product } from '../shared/models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  private apiUrl = 'http://localhost:3000';\n\n  constructor(private http: HttpClient) {}\n\n  getUsers(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/users`);\n  }\n\n  getProductById(id: number): Observable<Product> {\n    return this.http.get<Product>(`${this.apiUrl}/products/${id}`);\n  }\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(`${this.apiUrl}/products`);\n  }\n\n  addProduct(product: Product): Observable<Product> {\n    return this.http.post<Product>(`${this.apiUrl}/products`, product);\n  }\n\n  deleteProduct(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/products/${id}`);\n  }\n\n  updateProduct(product: Product): Observable<Product> {\n    return this.http.put<Product>(`${this.apiUrl}/products/${product.id}`, product).pipe(\n      catchError(error => throwError(() => new Error('Update failed: ' + error.message)))\n    );\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}