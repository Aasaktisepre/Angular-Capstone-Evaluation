{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/core/data.service\";\nimport * as i4 from \"@angular/common\";\nfunction UpdateProductComponent_option_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r2);\n  }\n}\nfunction UpdateProductComponent_p_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMessage);\n  }\n}\nexport class UpdateProductComponent {\n  constructor(fb, route, dataService, router) {\n    this.fb = fb;\n    this.route = route;\n    this.dataService = dataService;\n    this.router = router;\n    this.errorMessage = null;\n    this.categories = ['Electronics', 'Clothing', 'Books', 'SkinCare', 'Health', 'Sports', 'Stationary'];\n    this.productId = +this.route.snapshot.paramMap.get('id');\n    this.updateProductForm = this.fb.group({\n      id: [this.productId],\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      manufacturer: ['', Validators.required],\n      manufacturingDate: ['', Validators.required],\n      price: [0, [Validators.required, Validators.min(1), Validators.max(1000)]],\n      quantity: [0, [Validators.required, Validators.min(0)]],\n      category: ['', Validators.required],\n      supplierName: [''],\n      supplierContact: [''] // Add supplier contact field\n    });\n  }\n\n  ngOnInit() {\n    this.dataService.getProductById(this.productId).subscribe({\n      next: product => {\n        this.updateProductForm.patchValue({\n          id: product.id,\n          name: product.name,\n          description: product.description,\n          manufacturer: product.manufacturer,\n          manufacturingDate: product.manufacturingDate,\n          price: product.price,\n          quantity: product.quantity,\n          category: product.category,\n          supplierName: product.supplier?.name || '',\n          supplierContact: product.supplier?.contact || '' // Patch supplier contact\n        });\n      },\n\n      error: err => this.errorMessage = err.message\n    });\n  }\n  onSubmit() {\n    if (this.updateProductForm.valid) {\n      const product = {\n        id: this.productId,\n        name: this.updateProductForm.get('name')?.value,\n        description: this.updateProductForm.get('description')?.value,\n        manufacturer: this.updateProductForm.get('manufacturer')?.value,\n        manufacturingDate: this.updateProductForm.get('manufacturingDate')?.value,\n        price: this.updateProductForm.get('price')?.value,\n        quantity: this.updateProductForm.get('quantity')?.value,\n        category: this.updateProductForm.get('category')?.value,\n        supplier: {\n          name: this.updateProductForm.get('supplierName')?.value,\n          contact: this.updateProductForm.get('supplierContact')?.value\n        }\n      };\n      this.dataService.updateProduct(product).subscribe({\n        next: () => {\n          alert('Product updated successfully');\n          this.router.navigate(['/inventory']);\n        },\n        error: err => this.errorMessage = err.message\n      });\n    } else {\n      this.errorMessage = 'Please fill all fields correctly.';\n    }\n  }\n}\nUpdateProductComponent.ɵfac = function UpdateProductComponent_Factory(t) {\n  return new (t || UpdateProductComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.DataService), i0.ɵɵdirectiveInject(i2.Router));\n};\nUpdateProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateProductComponent,\n  selectors: [[\"app-update-product\"]],\n  decls: 47,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"card\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\"], [\"for\", \"manufacturer\"], [\"type\", \"text\", \"id\", \"manufacturer\", \"formControlName\", \"manufacturer\"], [\"for\", \"manufacturingDate\"], [\"type\", \"date\", \"id\", \"manufacturingDate\", \"formControlName\", \"manufacturingDate\"], [\"for\", \"price\"], [\"type\", \"number\", \"id\", \"price\", \"formControlName\", \"price\"], [\"for\", \"quantity\"], [\"type\", \"number\", \"id\", \"quantity\", \"formControlName\", \"quantity\"], [\"for\", \"category\"], [\"id\", \"category\", \"formControlName\", \"category\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"supplierName\"], [\"id\", \"supplierName\", \"formControlName\", \"supplierName\", \"placeholder\", \"Supplier Name\"], [\"for\", \"supplierContact\"], [\"id\", \"supplierContact\", \"formControlName\", \"supplierContact\", \"placeholder\", \"Supplier Contact\"], [\"type\", \"submit\", 3, \"disabled\"], [\"class\", \"error-message\", 4, \"ngIf\"], [3, \"value\"], [1, \"error-message\"]],\n  template: function UpdateProductComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Update Product\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateProductComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"Manufacturer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 10);\n      i0.ɵɵtext(19, \"Manufacturing Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 3)(22, \"label\", 12);\n      i0.ɵɵtext(23, \"Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 3)(26, \"label\", 14);\n      i0.ɵɵtext(27, \"Quantity\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 3)(30, \"label\", 16);\n      i0.ɵɵtext(31, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"select\", 17)(33, \"option\", 18);\n      i0.ɵɵtext(34, \"Select Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(35, UpdateProductComponent_option_35_Template, 2, 2, \"option\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"div\")(37, \"label\", 20);\n      i0.ɵɵtext(38, \"Supplier Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\")(41, \"label\", 22);\n      i0.ɵɵtext(42, \"Supplier Contact:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(43, \"input\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"button\", 24);\n      i0.ɵɵtext(45, \"Update Product\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(46, UpdateProductComponent_p_46_Template, 2, 1, \"p\", 25);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.updateProductForm);\n      i0.ɵɵadvance(31);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabled\", ctx.updateProductForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    height: 100vh;\\r\\n  }\\r\\n  \\r\\n  .card[_ngcontent-%COMP%] {\\r\\n    background-color: #f9f9f9;\\r\\n    padding: 20px;\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\r\\n    width: 100%;\\r\\n    max-width: 400px;\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 15px;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 8px;\\r\\n    border: 1px solid #ddd;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%] {\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n    padding: 10px;\\r\\n    border: none;\\r\\n    border-radius: 4px;\\r\\n    cursor: pointer;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%]:disabled {\\r\\n    background-color: #cccccc;\\r\\n    cursor: not-allowed;\\r\\n  }\\r\\n  \\r\\n  .error-message[_ngcontent-%COMP%] {\\r\\n    color: #ff0000;\\r\\n    margin-top: 10px;\\r\\n    font-size: 14px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvaW52ZW50b3J5L3VwZGF0ZS1wcm9kdWN0L3VwZGF0ZS1wcm9kdWN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixhQUFhO0VBQ2Y7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQix1Q0FBdUM7SUFDdkMsV0FBVztJQUNYLGdCQUFnQjtJQUNoQixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxjQUFjO0lBQ2Qsa0JBQWtCO0VBQ3BCOztFQUVBOztJQUVFLFdBQVc7SUFDWCxZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osYUFBYTtJQUNiLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLFdBQVc7RUFDYjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLGVBQWU7RUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gIH1cclxuICBcclxuICAuY2FyZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWF4LXdpZHRoOiA0MDBweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tZ3JvdXAgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWdyb3VwIGlucHV0LFxyXG4gIC5mb3JtLWdyb3VwIHNlbGVjdCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBcclxuICBidXR0b246ZGlzYWJsZWQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2NjY2NjYztcclxuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XHJcbiAgfVxyXG4gIFxyXG4gIC5lcnJvci1tZXNzYWdlIHtcclxuICAgIGNvbG9yOiAjZmYwMDAwO1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","UpdateProductComponent","constructor","fb","route","dataService","router","productId","snapshot","paramMap","get","updateProductForm","group","id","name","required","description","manufacturer","manufacturingDate","price","min","max","quantity","category","supplierName","supplierContact","ngOnInit","getProductById","subscribe","next","product","patchValue","supplier","contact","error","err","errorMessage","message","onSubmit","valid","value","updateProduct","alert","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\malik\\Downloads\\Evaluation\\lab-angular-main\\src\\app\\features\\inventory\\update-product\\update-product.component.ts","C:\\Users\\malik\\Downloads\\Evaluation\\lab-angular-main\\src\\app\\features\\inventory\\update-product\\update-product.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from 'src/app/core/data.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.css']\n})\nexport class UpdateProductComponent implements OnInit {\n  updateProductForm: FormGroup;\n  errorMessage: string | null = null;\n  categories: string[] = ['Electronics', 'Clothing', 'Books', 'SkinCare', 'Health', 'Sports', 'Stationary'];\n  productId: number;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private router: Router\n  ) {\n    this.productId = +this.route.snapshot.paramMap.get('id')!;\n    this.updateProductForm = this.fb.group({\n      id: [this.productId],\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      manufacturer: ['', Validators.required],\n      manufacturingDate: ['', Validators.required],\n      price: [0, [Validators.required, Validators.min(1), Validators.max(1000)]],\n      quantity: [0, [Validators.required, Validators.min(0)]],\n      category: ['', Validators.required],\n      supplierName: [''], // Add supplier name field\n      supplierContact: [''] // Add supplier contact field\n    });\n  }\n\n  ngOnInit() {\n    this.dataService.getProductById(this.productId).subscribe({\n      next: (product) => {\n        this.updateProductForm.patchValue({\n          id: product.id,\n          name: product.name,\n          description: product.description,\n          manufacturer: product.manufacturer,\n          manufacturingDate: product.manufacturingDate,\n          price: product.price,\n          quantity: product.quantity,\n          category: product.category,\n          supplierName: product.supplier?.name || '', // Patch supplier name\n          supplierContact: product.supplier?.contact || '' // Patch supplier contact\n        });\n      },\n      error: (err) => this.errorMessage = err.message\n    });\n  }\n\n  onSubmit(): void {\n    if (this.updateProductForm.valid) {\n      const product = {\n        id: this.productId,\n        name: this.updateProductForm.get('name')?.value,\n        description: this.updateProductForm.get('description')?.value,\n        manufacturer: this.updateProductForm.get('manufacturer')?.value,\n        manufacturingDate: this.updateProductForm.get('manufacturingDate')?.value,\n        price: this.updateProductForm.get('price')?.value,\n        quantity: this.updateProductForm.get('quantity')?.value,\n        category: this.updateProductForm.get('category')?.value,\n        supplier: { // Add supplier object\n          name: this.updateProductForm.get('supplierName')?.value,\n          contact: this.updateProductForm.get('supplierContact')?.value\n        }\n      };\n      this.dataService.updateProduct(product).subscribe({\n        next: () => {\n          alert('Product updated successfully');\n          this.router.navigate(['/inventory']);\n        },\n        error: (err) => this.errorMessage = err.message\n      });\n    } else {\n      this.errorMessage = 'Please fill all fields correctly.';\n    }\n  }\n}","<div class=\"container\">\r\n    <div class=\"card\">\r\n      <h2>Update Product</h2>\r\n      <form [formGroup]=\"updateProductForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"name\">Name</label>\r\n          <input type=\"text\" id=\"name\" formControlName=\"name\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"description\">Description</label>\r\n          <input type=\"text\" id=\"description\" formControlName=\"description\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"manufacturer\">Manufacturer</label>\r\n          <input type=\"text\" id=\"manufacturer\" formControlName=\"manufacturer\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"manufacturingDate\">Manufacturing Date</label>\r\n          <input type=\"date\" id=\"manufacturingDate\" formControlName=\"manufacturingDate\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"price\">Price</label>\r\n          <input type=\"number\" id=\"price\" formControlName=\"price\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"quantity\">Quantity</label>\r\n          <input type=\"number\" id=\"quantity\" formControlName=\"quantity\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"category\">Category</label>\r\n          <select id=\"category\" formControlName=\"category\">\r\n            <option value=\"\">Select Category</option>\r\n            <option *ngFor=\"let category of categories\" [value]=\"category\">{{ category }}</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label for=\"supplierName\">Supplier Name:</label>\r\n          <input id=\"supplierName\" formControlName=\"supplierName\" placeholder=\"Supplier Name\" />\r\n        </div>\r\n        <div>\r\n          <label for=\"supplierContact\">Supplier Contact:</label>\r\n          <input id=\"supplierContact\" formControlName=\"supplierContact\" placeholder=\"Supplier Contact\" />\r\n        </div>\r\n        <button type=\"submit\" [disabled]=\"updateProductForm.invalid\">Update Product</button>\r\n        <p *ngIf=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n      </form>\r\n    </div>\r\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}