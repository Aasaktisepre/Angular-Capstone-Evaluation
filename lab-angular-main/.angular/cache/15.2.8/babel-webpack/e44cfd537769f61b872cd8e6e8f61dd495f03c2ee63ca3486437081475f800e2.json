{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet SignInComponent = class SignInComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.errorMessage = null;\n    this.signInForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onSignIn() {\n    if (this.signInForm.valid) {\n      const {\n        email,\n        password\n      } = this.signInForm.value;\n      this.authService.login(email, password).subscribe({\n        next: response => {\n          this.errorMessage = null;\n          alert('User authenticated successfully');\n          this.router.navigate(['/inventory']);\n        },\n        error: err => {\n          this.errorMessage = err.message;\n        }\n      });\n    } else {\n      this.errorMessage = 'Please fill all fields correctly.';\n    }\n  }\n};\nSignInComponent = __decorate([Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})], SignInComponent);\nexport { SignInComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAGzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YAAoBC,EAAe,EAAUC,WAAwB,EAAUC,MAAc;IAAzE,OAAE,GAAFF,EAAE;IAAuB,gBAAW,GAAXC,WAAW;IAAuB,WAAM,GAANC,MAAM;IAFrF,iBAAY,GAAkB,IAAI;IAGhC,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC9BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,IAAI,CAACL,UAAU,CAACM,KAAK,EAAE;MACzB,MAAM;QAAEJ,KAAK;QAAEE;MAAQ,CAAE,GAAG,IAAI,CAACJ,UAAU,CAACO,KAAK;MACjD,IAAI,CAACT,WAAW,CAACU,KAAK,CAACN,KAAK,EAAEE,QAAQ,CAAC,CAACK,SAAS,CAAC;QAChDC,IAAI,EAAGC,QAAQ,IAAI;UACjB,IAAI,CAACC,YAAY,GAAG,IAAI;UACxBC,KAAK,CAAC,iCAAiC,CAAC;UACxC,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;QACtC,CAAC;QACDC,KAAK,EAAGC,GAAG,IAAI;UACb,IAAI,CAACJ,YAAY,GAAGI,GAAG,CAACC,OAAO;QACjC;OACD,CAAC;KACH,MAAM;MACL,IAAI,CAACL,YAAY,GAAG,mCAAmC;;EAE3D;CACD;AA5BYjB,eAAe,eAL3BF,SAAS,CAAC;EACTyB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACWzB,eAAe,CA4B3B;SA5BYA,eAAe","names":["Component","Validators","SignInComponent","constructor","fb","authService","router","signInForm","group","email","required","password","onSignIn","valid","value","login","subscribe","next","response","errorMessage","alert","navigate","error","err","message","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\malik\\Downloads\\Evaluation\\lab-angular-main\\src\\app\\features\\auth\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/auth.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent {\n  signInForm: FormGroup;\n  errorMessage: string | null = null;\n\n  constructor(private fb: FormBuilder, private authService: AuthService, private router: Router) {\n    this.signInForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSignIn(): void {\n    if (this.signInForm.valid) {\n      const { email, password } = this.signInForm.value;\n      this.authService.login(email, password).subscribe({\n        next: (response) => {\n          this.errorMessage = null;\n          alert('User authenticated successfully');\n          this.router.navigate(['/inventory']);\n        },\n        error: (err) => {\n          this.errorMessage = err.message;\n        }\n      });\n    } else {\n      this.errorMessage = 'Please fill all fields correctly.';\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}