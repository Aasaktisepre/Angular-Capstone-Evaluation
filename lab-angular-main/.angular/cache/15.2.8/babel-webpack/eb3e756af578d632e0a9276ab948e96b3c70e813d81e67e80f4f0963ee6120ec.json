{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class SignInComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.errorMessage = '';\n  }\n  onLogin(form) {\n    if (form.valid) {\n      this.authService.login(form.value.email, form.value.password).subscribe(isAuthenticated => {\n        if (isAuthenticated) {\n          this.errorMessage = '';\n          this.router.navigate(['/inventory']);\n        } else {\n          this.errorMessage = 'Invalid email or password. Please try again.';\n        }\n      }, error => {\n        this.errorMessage = 'An error occurred during login. Please try again.';\n        console.error(error);\n      });\n    } else {\n      this.errorMessage = 'Please fill out all required fields.';\n    }\n  }\n}\nSignInComponent.ɵfac = function SignInComponent_Factory(t) {\n  return new (t || SignInComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nSignInComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignInComponent,\n  selectors: [[\"app-sign-in\"]],\n  decls: 0,\n  vars: 0,\n  template: function SignInComponent_Template(rf, ctx) {},\n  styles: [\".card-container[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    height: 100vh;\\r\\n  }\\r\\n  .card[_ngcontent-%COMP%] {\\r\\n    background-color: #f9f9f9;\\r\\n    padding: 20px;\\r\\n    border: 1px solid #ddd;\\r\\n    width: 300px;\\r\\n    box-shadow: 0 2px 5px rgba(0,0,0,0.1);\\r\\n  }\\r\\n  .form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 15px; \\r\\n  }\\r\\n  .error-text[_ngcontent-%COMP%] {\\r\\n    color: red;\\r\\n    font-size: 12px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvYXV0aC9zaWduLWluL3NpZ24taW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGFBQWE7RUFDZjtFQUNBO0lBQ0UseUJBQXlCO0lBQ3pCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLHFDQUFxQztFQUN2QztFQUNBO0lBQ0UsbUJBQW1CO0VBQ3JCO0VBQ0E7SUFDRSxVQUFVO0lBQ1YsZUFBZTtFQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICB9XHJcbiAgLmNhcmQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAycHggNXB4IHJnYmEoMCwwLDAsMC4xKTtcclxuICB9XHJcbiAgLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDsgXHJcbiAgfVxyXG4gIC5lcnJvci10ZXh0IHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAF5D,iBAAY,GAAW,EAAE;EAE+C;EAExEC,OAAO,CAACC,IAAS;IACf,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd,IAAI,CAACJ,WAAW,CAACK,KAAK,CAACF,IAAI,CAACG,KAAK,CAACC,KAAK,EAAEJ,IAAI,CAACG,KAAK,CAACE,QAAQ,CAAC,CAACC,SAAS,CACpEC,eAAe,IAAI;QAClB,IAAIA,eAAe,EAAE;UACnB,IAAI,CAACC,YAAY,GAAG,EAAE;UACtB,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;SACrC,MAAM;UACL,IAAI,CAACD,YAAY,GAAG,8CAA8C;;MAEtE,CAAC,EACAE,KAAK,IAAI;QACR,IAAI,CAACF,YAAY,GAAG,mDAAmD;QACvEG,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CACF;KACF,MAAM;MACL,IAAI,CAACF,YAAY,GAAG,sCAAsC;;EAE9D;;AAxBWb,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["SignInComponent","constructor","authService","router","onLogin","form","valid","login","value","email","password","subscribe","isAuthenticated","errorMessage","navigate","error","console","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Users\\malik\\Desktop\\Capstone evaluation\\lab-angular-main\\src\\app\\features\\auth\\sign-in\\sign-in.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/auth.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent {\n  errorMessage: string = '';\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  onLogin(form: any): void {\n    if (form.valid) {\n      this.authService.login(form.value.email, form.value.password).subscribe(\n        (isAuthenticated) => {\n          if (isAuthenticated) {\n            this.errorMessage = '';\n            this.router.navigate(['/inventory']);\n          } else {\n            this.errorMessage = 'Invalid email or password. Please try again.';\n          }\n        },\n        (error) => {\n          this.errorMessage = 'An error occurred during login. Please try again.';\n          console.error(error);\n        }\n      );\n    } else {\n      this.errorMessage = 'Please fill out all required fields.';\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}