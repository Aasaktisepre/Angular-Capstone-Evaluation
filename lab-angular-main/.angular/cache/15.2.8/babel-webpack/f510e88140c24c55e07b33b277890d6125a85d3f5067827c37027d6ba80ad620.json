{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigate(['/auth/sign-in']);\n      return false;\n    }\n    // Check if the user is an admin\n    if (this.authService.getUserRole() !== 'admin') {\n      alert('Only admin can access this page');\n      this.router.navigate(['/inventory']); // Redirect to inventory or another page\n      return false;\n    }\n    return true;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEvEC,WAAW;IACT,IAAI,CAAC,IAAI,CAACF,WAAW,CAACG,UAAU,EAAE,EAAE;MAClC,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;MACvC,OAAO,KAAK;;IAEd;IACA,IAAI,IAAI,CAACJ,WAAW,CAACK,WAAW,EAAE,KAAK,OAAO,EAAE;MAC9CC,KAAK,CAAC,iCAAiC,CAAC;MACxC,IAAI,CAACL,MAAM,CAACG,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;MACtC,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;;AAfWN,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAS,SAATT,SAAS;EAAAU,YAFR;AAAM","names":["AuthGuard","constructor","authService","router","canActivate","isLoggedIn","navigate","getUserRole","alert","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\malik\\Downloads\\Angular Capstone Project\\lab-angular-main\\src\\app\\core\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigate(['/auth/sign-in']);\n      return false;\n    }\n    // Check if the user is an admin\n    if (this.authService.getUserRole() !== 'admin') {\n      alert('Only admin can access this page');\n      this.router.navigate(['/inventory']); // Redirect to inventory or another page\n      return false;\n    }\n    return true;\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}